<?xml version="1.0" encoding="utf-8"?>
<!-- 
     This configuration file is required if iisnode is used to run node processes behind
     IIS or IIS Express.  For more information, visit:

     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config
-->

<configuration>
     <system.webServer>
         <staticContent>
             <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="365.00:00:00" />
             <remove fileExtension=".woff" />
             <remove fileExtension=".woff2" />
             <mimeMap fileExtension=".woff" mimeType="application/x-font-woff" />
             <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
         </staticContent>
          <httpProtocol>
              <customHeaders>
                  <remove name="X-Powered-By" />
                  <add name="X-Content-Type-Options" value="nosniff" />
              </customHeaders>
          </httpProtocol>
          <!-- Visit http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx for more information on WebSocket support -->
          <webSocket enabled="false" />
          <handlers>
               <!-- Indicates that the app.js file is a node.js site to be handled by the iisnode module -->
               <add name="iisnode" path="app.js" verb="*" modules="iisnode"/>
          </handlers>
          <rewrite>
               <rules>
                    <!-- Do not interfere with requests for node-inspector debugging -->
                    <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">                    
                        <match url="^app.js\/debug[\/]?" />
                    </rule>

                    <rule name="Redirect to us.healthbot-dev.microsoft.com" stopProcessing="true">
                        <match url="(.*)"/>
                        <conditions logicalGrouping="MatchAny">
                            <add input="{HTTP_HOST}" pattern="^healthbot-dev\.microsoft\.com$" />
                        </conditions>
                        <action type="Redirect" url="https://us.healthbot-dev.microsoft.com/{R:0}" />
                    </rule>

                    <rule name="Redirect to us.healthbot-test.microsoft.com" stopProcessing="true">
                        <match url="(.*)"/>
                        <conditions logicalGrouping="MatchAny">
                            <add input="{HTTP_HOST}" pattern="^healthbot-test\.microsoft\.com$" />
                        </conditions>
                        <action type="Redirect" url="https://us.healthbot-test.microsoft.com/{R:0}" />
                    </rule>

                    <rule name="Redirect to us.healthbot-staging.microsoft.com" stopProcessing="true">
                        <match url="(.*)"/>
                        <conditions logicalGrouping="MatchAny">
                            <add input="{HTTP_HOST}" pattern="^healthbot-staging\.microsoft\.com$" />
                        </conditions>
                        <action type="Redirect" url="https://us.healthbot-staging.microsoft.com/{R:0}" />
                    </rule>

                    <rule name="Redirect to us.healthbot.microsoft.com" stopProcessing="true">
                        <match url="(.*)"/>
                        <conditions logicalGrouping="MatchAny">
                            <add input="{HTTP_HOST}" pattern="^healthbot\.microsoft\.com$" />
                        </conditions>
                        <action type="Redirect" url="https://us.healthbot.microsoft.com/{R:0}" />
                    </rule>

                    <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
                    <rule name="StaticContent">
                         <action type="Rewrite" url="public{REQUEST_URI}"/>
                    </rule>

                    <rule name="Redirect to https" stopProcessing="true">
                        <match url=".*" />
                        <conditions>
                            <add input="{HTTPS}" pattern="off" ignoreCase="true" />
                        </conditions>
                        <action type="Redirect" url="https://{HTTP_HOST}{REQUEST_URI}" redirectType="Permanent" appendQueryString="false" />
                    </rule>

                    <!-- All other URLs are mapped to the node.js site entry point -->
                    <rule name="DynamicContent">
                         <conditions>
                              <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                         </conditions>
                         <action type="Rewrite" url="app.js"/>
                    </rule>
               </rules>
          </rewrite>

          <!-- bin directory has no special meaning in node.js and apps can be placed in it -->
          <security>
               <requestFiltering>
                    <requestLimits maxQueryString="4096" />
                    <hiddenSegments>
                         <remove segment="bin"/>
                    </hiddenSegments>
               </requestFiltering>
          </security>

          <!-- Make sure error responses are left untouched -->
          <httpErrors existingResponse="PassThrough" />

          <!--
               You can control how Node is hosted within IIS using the following options:
                 * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
                 * node_env: will be propagated to node as NODE_ENV environment variable
                 * debuggingEnabled - controls whether the built-in debugger is enabled

               To debug your node.js application:
                 * set the debuggingEnabled option to "true"
                 * enable web sockets from the portal at https://manage.windowsazure.com/#Workspaces/WebsiteExtension/Website/healthagentdashboardprod/configure
                 * browse to https://healthagentdashboardprod.azurewebsites.net/app.js/debug/

               See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options
          -->
          <iisnode watchedFiles="web.config;*.js" debuggingEnabled="false" flushResponse="true"/>
     </system.webServer>
</configuration>